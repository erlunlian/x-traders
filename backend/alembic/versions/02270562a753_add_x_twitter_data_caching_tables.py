"""Add X Twitter data caching tables

Revision ID: 02270562a753
Revises: bde08debefe2
Create Date: 2025-08-25 02:46:18.791954

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '02270562a753'
down_revision: Union[str, Sequence[str], None] = 'bde08debefe2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('x_users',
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('num_followers', sa.Integer(), nullable=True),
    sa.Column('num_following', sa.Integer(), nullable=True),
    sa.Column('fetched_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('username')
    )
    op.create_index(op.f('ix_x_users_created_at'), 'x_users', ['created_at'], unique=False)
    op.create_index('ix_x_users_fetched_at', 'x_users', ['fetched_at'], unique=False)
    op.create_table('x_tweets',
    sa.Column('tweet_id', sa.String(length=100), nullable=False),
    sa.Column('author_username', sa.String(length=100), nullable=False),
    sa.Column('text', sa.String(length=5000), nullable=False),
    sa.Column('retweet_count', sa.Integer(), nullable=True),
    sa.Column('reply_count', sa.Integer(), nullable=True),
    sa.Column('like_count', sa.Integer(), nullable=True),
    sa.Column('quote_count', sa.Integer(), nullable=True),
    sa.Column('view_count', sa.BIGINT(), nullable=True),
    sa.Column('bookmark_count', sa.Integer(), nullable=True),
    sa.Column('is_reply', sa.Boolean(), nullable=True),
    sa.Column('reply_to_tweet_id', sa.String(length=100), nullable=True),
    sa.Column('conversation_id', sa.String(length=100), nullable=True),
    sa.Column('in_reply_to_username', sa.String(length=100), nullable=True),
    sa.Column('quoted_tweet_id', sa.String(length=100), nullable=True),
    sa.Column('retweeted_tweet_id', sa.String(length=100), nullable=True),
    sa.Column('entities', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('tweet_created_at', sa.String(length=100), nullable=False),
    sa.Column('fetched_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['author_username'], ['x_users.username'], ),
    sa.PrimaryKeyConstraint('tweet_id')
    )
    op.create_index('ix_x_tweets_author', 'x_tweets', ['author_username'], unique=False)
    op.create_index('ix_x_tweets_conversation', 'x_tweets', ['conversation_id'], unique=False)
    op.create_index('ix_x_tweets_created_at', 'x_tweets', ['tweet_created_at'], unique=False)
    op.create_index('ix_x_tweets_fetched_at', 'x_tweets', ['fetched_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_x_tweets_fetched_at', table_name='x_tweets')
    op.drop_index('ix_x_tweets_created_at', table_name='x_tweets')
    op.drop_index('ix_x_tweets_conversation', table_name='x_tweets')
    op.drop_index('ix_x_tweets_author', table_name='x_tweets')
    op.drop_table('x_tweets')
    op.drop_index('ix_x_users_fetched_at', table_name='x_users')
    op.drop_index(op.f('ix_x_users_created_at'), table_name='x_users')
    op.drop_table('x_users')
    # ### end Alembic commands ###
